import threading
import time
from django.utils import timezone
from .models import Booked, Notify
from datetime import timedelta
import requests
import pytz
from aiogram import Bot
from asgiref.sync import sync_to_async

def send_telegram_message(user, hall_name, book_time, reminder_type):
    token = '7420958680:AAEIWUXyQisXfiyeMR7jMT6XhYkyBTw4XYI'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    chat_id = user.tg_id  # Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    moscow_tz = pytz.timezone('Europe/Moscow')
    book_time_msk = book_time.astimezone(moscow_tz)
    if reminder_type == 'hour':
        text = f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —á–µ—Ä–µ–∑ 1 —á–∞—Å —É –≤–∞—Å –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –±—Ä–æ–Ω—å –∑–∞–ª–∞ ¬´{hall_name}¬ª ({book_time_msk.strftime('%d.%m.%y –≤ %H:%M')})"
    elif reminder_type == 'day':
        text = f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —á–µ—Ä–µ–∑ 1 –¥–µ–Ω—å —É –≤–∞—Å –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –±—Ä–æ–Ω—å –∑–∞–ª–∞ ¬´{hall_name}¬ª ({book_time_msk.strftime('%d.%m.%y –≤ %H:%M')})"
    elif reminder_type == 'week':
        text = f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —á–µ—Ä–µ–∑ 1 –Ω–µ–¥–µ–ª—é —É –≤–∞—Å –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –±—Ä–æ–Ω—å –∑–∞–ª–∞ ¬´{hall_name}¬ª ({book_time_msk.strftime('%d.%m.%y –≤ %H:%M')})"
    else:
        return  # –ï—Å–ª–∏ reminder_type –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    url = f"https://api.telegram.org/bot{token}/sendMessage"
    payload = {
        'chat_id': chat_id,
        'text': text
    }

    Notify.objects.create(
        tg_id=user.tg_id,
        msg=text
    )


def check_reminders():
    now = timezone.localtime(timezone.now())  # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å —É—á–µ—Ç–æ–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
    bookings = Booked.objects.filter(book_time__gte=now)

    for booking in bookings:
        # –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –±—Ä–æ–Ω–∏
        book_time = booking.book_time

        # –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –≤—Ä–µ–º–µ–Ω–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        time_diff = book_time - now
        time_until_booking = booking.book_time - now
        # –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å —Ä–æ–≤–Ω–æ 1 —á–∞—Å
        if time_until_booking <= timedelta(hours=1) and time_until_booking > timedelta(minutes=59):
            print(booking.reminder_sent_hour)
            if not booking.reminder_sent_hour:
                send_telegram_message(booking.user, booking.hall.name, book_time, 'hour')
                booking.reminder_sent_hour = True  # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ —á–∞—Å–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
                booking.save()

        # –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å —Ä–æ–≤–Ω–æ 1 –¥–µ–Ω—å
        elif time_until_booking <= timedelta(days=1) and time_until_booking > timedelta(hours=23):
            if not booking.reminder_sent_day:
                send_telegram_message(booking.user, booking.hall.name, book_time, 'day')
                booking.reminder_sent_day = True  # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –¥–Ω–µ–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
                booking.save()

        # –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å —Ä–æ–≤–Ω–æ 1 –Ω–µ–¥–µ–ª—è
        elif time_until_booking <= timedelta(weeks=1) and time_until_booking > timedelta(days=6):
            if not booking.reminder_sent_week:
                send_telegram_message(booking.user, booking.hall.name, book_time, 'week')
                booking.reminder_sent_week = True  # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –Ω–µ–¥–µ–ª—å–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
                booking.save()


def run_reminder_scheduler():
    while True:
        now = timezone.localtime(timezone.now())  # –í—Ä–µ–º—è —Å —É—á–µ—Ç–æ–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
        if now.minute == 0:
            check_reminders()
            print("Checking...")
            time.sleep(61)  
        if now.minute == 30:
            check_reminders()
            print("Checking...")
            time.sleep(61)  


def start_scheduler():
    thread = threading.Thread(target=run_reminder_scheduler, daemon=True)
    thread.start()
